[platformio]
default_envs = ecosnapcam_sender

[env:ecosnapcam_sender]
platform = espressif32
board = esp32cam
framework = arduino
monitor_speed = 115200
lib_deps = 
    esp32-camera
monitor_dtr = 0
monitor_rts = 0
build_src_filter = +<sender_app/*> -<receiver_app/*>

[env:espnow_receiver]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
lib_deps = 
    bodmer/TFT_eSPI
    bodmer/TJpg_Decoder
lib_archive = false ; Bibliothek nicht als Archiv kompilieren, kann bei Makro-Problemen helfen
monitor_dtr = 0
monitor_rts = 0
build_src_filter = +<receiver_app/*> -<sender_app/*>
build_flags =
    -D USER_SETUP_LOADED
    -D ILI9341_DRIVER ; Oder ILI9341_2_DRIVER, je nachdem, was für Ihr CYD korrekt ist. ILI9341 ist gängiger.
    ; Pin-Definitionen für das CYD
    -D TFT_WIDTH=320
    -D TFT_HEIGHT=240
    -D TFT_MOSI=13
    -D TFT_SCLK=14
    -D TFT_CS=15
    -D TFT_DC=2
    -D TFT_RST=4    ; -1 wenn nicht verbunden, aber CYD hat meist einen RST-Pin
    -D TFT_BL=21
    -D TFT_BACKLIGHT_ON=HIGH ; HIGH schaltet die Hintergrundbeleuchtung ein
    ; Fonts laden
    -D LOAD_GLCD
    -D LOAD_FONT2
    -D LOAD_FONT4
    ; -D LOAD_FONT6 ; Optional, falls benötigt
    ; -D LOAD_FONT7 ; Optional, falls benötigt
    ; -D LOAD_FONT8 ; Optional, falls benötigt
    ; -D LOAD_GFXFF ; Optional, falls benötigt
    -D SMOOTH_FONT
    ; SPI Frequenzen
    -D SPI_FREQUENCY=40000000
    ; -D SPI_READ_FREQUENCY=20000000 ; Optional
    ; -D SPI_TOUCH_FREQUENCY=2500000 ; Optional, Touch wird nicht verwendet
